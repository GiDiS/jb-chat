name: Tests

on: [push, pull_request]

jobs:
  golang:
    name: Build (Go ${{ matrix.go }}, OS ${{matrix.os}})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: true
      matrix:
        go: [ "1.15", "1.16" ]
        os: [ ubuntu-20.04 ]
    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v2 # action page: <https://github.com/actions/setup-go>
        with:
          go-version: ${{ matrix.go }}

      - name: Check out code
        uses: actions/checkout@v2

      - name: Init Go modules Cache # Docs: <https://git.io/JfAKn#go---modules>
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Install Go dependencies
        run: go mod download

      - name: Run golang tests on Linux
        run: |
          docker-compose -f ./deploy/docker-compose.yaml up -d
          mkdir ./coverage-ci
          go test -v -race -cover -tags=debug -coverpkg=./... -coverprofile=./coverage-ci/pipe.txt -covermode=atomic ./cmd/chatd/main.go
          docker-compose -f ./deploy/docker-compose.yaml down
          cat ./coverage-ci/*.txt > ./coverage-ci/summary.txt

      - uses: codecov/codecov-action@v1 # Docs: <https://github.com/codecov/codecov-action>
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage-ci/summary.txt
          fail_ci_if_error: false

